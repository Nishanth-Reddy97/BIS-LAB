import numpy as np

# Initialize the image grid (example)
image_grid = np.array([
    [100, 110, 120],
    [ 90, 100, 130],
    [ 80,  95, 115]
])

def get_neighbors(grid, row, col):
    neighbors = []
    rows, cols = grid.shape
    for i in range(max(0, row-1), min(rows, row+2)):
        for j in range(max(0, col-1), min(cols, col+2)):
            neighbors.append(grid[i][j])
    return neighbors

def smooth_grid(grid):
    rows, cols = grid.shape
    new_grid = np.zeros_like(grid)
    for i in range(rows):
        for j in range(cols):
            neighbors = get_neighbors(grid, i, j)
            new_grid[i][j] = int(round(sum(neighbors)/len(neighbors)))
    return new_grid

# Iteration 1
new_grid = smooth_grid(image_grid)
print("Iteration 1 grid:\n", new_grid)

# Iteration 2
new_grid2 = smooth_grid(new_grid)
print("Iteration 2 grid:\n", new_grid2)
