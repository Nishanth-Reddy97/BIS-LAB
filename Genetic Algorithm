import random
import datetime

# Set of possible genes (characters)
gene_set = " abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!."

# Target string we want to evolve
target = "Hello World!"

def generate_parent(length):
    return ''.join(random.choices(gene_set, k=length))

def get_fitness(guess):
    return sum(1 for expected, actual in zip(target, guess) if expected == actual)

def mutate(parent):
    index = random.randrange(0, len(parent))
    child_genes = list(parent)
    new_gene, alternate = random.sample(gene_set, 2)
    child_genes[index] = alternate if new_gene == child_genes[index] else new_gene
    return ''.join(child_genes)

def display(guess, startTime):
    timeDiff = datetime.datetime.now() - startTime
    print(f"{guess} {get_fitness(guess)} {str(timeDiff)}")

def main():
    random.seed()
    best_parent = generate_parent(len(target))
    best_fitness = get_fitness(best_parent)
    startTime = datetime.datetime.now()
    display(best_parent, startTime)

    while True:
        child = mutate(best_parent)
        child_fitness = get_fitness(child)

        if best_fitness >= child_fitness:
            continue

        display(child, startTime)
        if child_fitness >= len(best_parent):
            break
        best_fitness = child_fitness
        best_parent = child

if __name__ == '__main__':
    main()
